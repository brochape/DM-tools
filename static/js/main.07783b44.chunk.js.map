{"version":3,"sources":["Globals.tsx","overmind/state.ts","overmind/actions.ts","overmind/index.ts","molecule/CharacterSheetsPage/CharacterSheetsPage.tsx","molecule/RollDicePage/RollDicePage.tsx","molecule/VideoPage/VideoPage.tsx","molecule/MainPageContent/MainPageContent.tsx","atom/MenuElement/MenuElement.tsx","molecule/SideMenu/SideMenu.tsx","App.tsx","index.tsx"],"names":["PAGE","state","title","currentPage","ROLL_DICE","characterSheets","Map","setPage","value","addCharSheet","console","log","set","charName","charSheet","setCharSheets","config","actions","useOvermind","createHook","createStateHook","createActionsHook","createEffectsHook","createReactionHook","CharacterSheetsPage","useState","currentSheet","setCurrentSheet","displayCharSheet","e","clickedChar","target","textContent","get","charButtons","pair","key","push","className","onClick","useEffect","size","locallySavedChars","window","localStorage","getItem","savedChars","JSON","parse","id","type","selectedFile","document","getElementById","files","length","base64","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","result","replace","readAsDataURL","scale","scaleStep","maxScale","minScale","hideRotation","RollDicePage","diceString","setDiceString","diceRollTotal","setDiceRollTotal","diceRollDetail","setDiceRollDetail","formulaOutput","DiceRoll","output","split","ex","onChange","evt","event","placeholder","htmlFor","Video","srcObject","props","refVideo","useRef","current","ref","VideoPage","peerConnection","callButtonDisabled","setCallButtonDisabled","answerButtonDisabled","setAnswerButtonDisabled","webcamButtonDisabled","setWebcamButtonDisabled","hangupButtonDisabled","setHangupButtonDisabled","MediaStream","localStream","setLocalStream","localVideoStream","setLocalVideoStream","remoteStream","setRemoteStream","servers","iceServers","urls","iceCandidatePoolSize","callId","setCallId","a","db","firebase","firestore","collection","doc","roomRef","RTCPeerConnection","registerPeerConnectionListeners","getTracks","forEach","track","addTrack","callerCandidatesCollection","addEventListener","candidate","add","toJSON","createOffer","offer","setLocalDescription","roomWithOffer","sdp","streams","onSnapshot","snapshot","data","currentRemoteDescription","answer","rtcSessionDescription","RTCSessionDescription","setRemoteDescription","docChanges","change","stringify","addIceCandidate","RTCIceCandidate","joinRoomById","roomId","roomSnapshot","exists","calleeCandidatesCollection","createAnswer","roomWithAnswer","update","navigator","mediaDevices","getUserMedia","video","audio","stream","getVideoTracks","stop","close","delete","location","reload","iceGatheringState","connectionState","signalingState","iceConnectionState","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","autoPlay","playsInline","disabled","MainPageContent","CHARACTER_SHEETS","VIDEO","MenuElement","associatedComponent","SideMenu","App","overmind","createOvermind","ReactDOM","render"],"mappings":"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","file":"static/js/main.07783b44.chunk.js","sourcesContent":["export enum PAGE {\r\n    ROLL_DICE,\r\n    CHARACTER_SHEETS,\r\n    VIDEO,\r\n}\r\n","import { PAGE } from './../Globals';\r\nexport const state = {\r\n    title: 'My App',\r\n    currentPage: PAGE.ROLL_DICE,\r\n    characterSheets: new Map<string, string>(),\r\n};\r\n","import { Action, Context } from 'overmind';\r\nimport { PAGE } from './../Globals';\r\nexport const setPage: Action<PAGE> = (\r\n    { state }: Context,\r\n    value: PAGE\r\n): void => {\r\n    state.currentPage = value;\r\n};\r\n\r\ninterface ICharSheetEntry {\r\n    charName: string;\r\n    charSheet: string;\r\n}\r\n\r\nexport const addCharSheet: Action<ICharSheetEntry> = (\r\n    { state }: Context,\r\n    value: ICharSheetEntry\r\n): void => {\r\n    console.log('adding entry');\r\n    state.characterSheets = new Map(state.characterSheets).set(\r\n        value.charName,\r\n        value.charSheet\r\n    );\r\n};\r\n\r\nexport const setCharSheets: Action<Map<string, string>> = (\r\n    { state }: Context,\r\n    value: Map<string, string>\r\n): void => {\r\n    state.characterSheets = value;\r\n};\r\n","import { IConfig } from 'overmind';\r\nimport {\r\n  createHook,\r\n  createStateHook,\r\n  createActionsHook,\r\n  createEffectsHook,\r\n  createReactionHook,\r\n} from 'overmind-react';\r\nimport { state } from './state';\r\nimport * as actions from './actions';\r\n\r\nexport const config = {\r\n  state,\r\n  actions,\r\n};\r\n\r\ndeclare module 'overmind' {\r\n  interface Config extends IConfig<typeof config> {\r\n    state: typeof config.state;\r\n    actions: typeof config.actions;\r\n  }\r\n}\r\n\r\nexport const useOvermind = createHook<typeof config>();\r\nexport const useState = createStateHook<typeof config>();\r\nexport const useActions = createActionsHook<typeof config>();\r\nexport const useEffects = createEffectsHook<typeof config>();\r\nexport const useReaction = createReactionHook<typeof config>();\r\n","import React, { useEffect, useState } from 'react';\r\nimport PDFViewer from 'pdf-viewer-reactjs';\r\nimport { FunctionComponent } from 'react';\r\nimport './CharacterSheetsPage.css';\r\nimport { useOvermind } from '../../overmind';\r\n\r\nexport const CharacterSheetsPage: FunctionComponent = () => {\r\n    const { state, actions } = useOvermind();\r\n\r\n    // const [chars, setChars] = useState<Map<string, string>>(new Map());\r\n    const [currentSheet, setCurrentSheet] = useState<string>('');\r\n\r\n    const displayCharSheet = (e: React.MouseEvent<HTMLElement>) => {\r\n        const clickedChar = (e.target as HTMLButtonElement).textContent;\r\n        if (clickedChar) {\r\n            setCurrentSheet(state.characterSheets.get(clickedChar) || '');\r\n        }\r\n    };\r\n\r\n    const charButtons: any[] = [];\r\n    for (let pair of state.characterSheets) {\r\n        var [key] = pair;\r\n        charButtons.push(\r\n            <button\r\n                className={'charButton'}\r\n                key={'char ' + key}\r\n                onClick={displayCharSheet}\r\n            >\r\n                {key}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (state.characterSheets.size === 0) {\r\n            const locallySavedChars = window.localStorage.getItem(\r\n                'DM-tool-chars'\r\n            );\r\n            let savedChars = new Map();\r\n            if (locallySavedChars) {\r\n                savedChars = JSON.parse(locallySavedChars);\r\n            }\r\n            console.log('Reset chars');\r\n            actions.setCharSheets(savedChars);\r\n        }\r\n    }, []);\r\n\r\n    const processPDF = () => {\r\n        //Read File\r\n        const selectedFile = (document?.getElementById(\r\n            'pdfUploadButton'\r\n        ) as HTMLInputElement).files;\r\n\r\n        const charName = (document.getElementById(\r\n            'charName'\r\n        ) as HTMLInputElement).value;\r\n        //Check File is not Empty\r\n        if (selectedFile && selectedFile.length > 0) {\r\n            // Select the very first file from list\r\n            var fileToLoad = selectedFile[0];\r\n            // FileReader function for read the file.\r\n            var fileReader = new FileReader();\r\n            var base64;\r\n            // Onload of file read the file content\r\n            fileReader.onload = function (fileLoadedEvent) {\r\n                base64 = fileLoadedEvent?.target?.result;\r\n                console.log('Before', state.characterSheets);\r\n                actions.addCharSheet({\r\n                    charName: charName,\r\n                    charSheet: base64.replace(\r\n                        'data:application/pdf;base64,',\r\n                        ''\r\n                    ),\r\n                });\r\n            };\r\n            // Convert data to base64\r\n            fileReader.readAsDataURL(fileToLoad);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'mainPage'}>\r\n            <div className={'charButtons'}>\r\n                {charButtons}\r\n                <input\r\n                    id=\"pdfUploadButton\"\r\n                    type=\"file\"\r\n                    className={'charButton'}\r\n                ></input>\r\n                <input id={'charName'} type=\"text\"></input>\r\n                <button onClick={processPDF} className={'charButton'}>\r\n                    +\r\n                </button>\r\n            </div>\r\n            {currentSheet !== '' ? (\r\n                <div className={'pdfViewer'}>\r\n                    <PDFViewer\r\n                        document={{\r\n                            base64: currentSheet,\r\n                        }}\r\n                        scale={1.2}\r\n                        scaleStep={0.5}\r\n                        maxScale={5}\r\n                        minScale={0.5}\r\n                        hideRotation\r\n                    />\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n","import * as React from 'react';\r\nimport { FunctionComponent, useEffect, useState } from 'react';\r\nimport { DiceRoll } from 'rpg-dice-roller';\r\nimport './RollDicePage.css';\r\n\r\nexport interface IAppProps {}\r\n\r\nexport const RollDicePage: FunctionComponent = () => {\r\n    let [diceString, setDiceString] = useState<string>('');\r\n    let [diceRollTotal, setDiceRollTotal] = useState<string>('');\r\n    let [diceRollDetail, setDiceRollDetail] = useState<string>('');\r\n    useEffect(() => {\r\n        try {\r\n            const formulaOutput = ('' + new DiceRoll(diceString).output).split(\r\n                ' = '\r\n            );\r\n            setDiceRollDetail(formulaOutput[0].split(': ')[1]);\r\n            setDiceRollTotal(formulaOutput[1]);\r\n        } catch (ex) {\r\n            setDiceRollDetail('Invalid formula');\r\n            setDiceRollTotal('0');\r\n        }\r\n    }, [diceString]);\r\n\r\n    const inputChanged = (event) => {\r\n        console.log(event);\r\n        setDiceString(event.target.value);\r\n    };\r\n    return (\r\n        <div className={'mainPage'}>\r\n            <div className={'mainPageTitle'}>Roll dice</div>\r\n            <div className={'formulaInputGroup'}>\r\n                <input\r\n                    className={'formulaInput'}\r\n                    id={'formula'}\r\n                    onChange={(evt) => inputChanged(evt)}\r\n                    value={diceString}\r\n                    placeholder=\"Dice Formula\"\r\n                />\r\n                <label htmlFor={'formula'} className={'formulaInputLabel'}>\r\n                    Dice formula\r\n                </label>\r\n            </div>\r\n            <div className=\"formulaResultDetail\">{diceRollDetail}</div>\r\n            <div className=\"formulaResultTotal\">{diceRollTotal}</div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useRef, useState, VideoHTMLAttributes } from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\r\n    srcObject: MediaStream;\r\n};\r\n\r\nexport default function Video({ srcObject, ...props }: PropsType) {\r\n    const refVideo = useRef<HTMLVideoElement>(null);\r\n\r\n    useEffect(() => {\r\n        console.log('video stream set');\r\n        if (!refVideo.current) return;\r\n        refVideo.current.srcObject = srcObject;\r\n    }, [srcObject]);\r\n\r\n    return <video ref={refVideo} {...props} />;\r\n}\r\n\r\nexport const VideoPage: FunctionComponent = () => {\r\n    const firebaseConfig = {\r\n        apiKey: 'AIzaSyC9DxmeKbSAY9HFZ2NBzVRhzN0UjxSU5Bs',\r\n        authDomain: 'webrtc-test-480b3.firebaseapp.com',\r\n        projectId: 'webrtc-test-480b3',\r\n        storageBucket: 'webrtc-test-480b3.appspot.com',\r\n        messagingSenderId: '982478263213',\r\n        appId: '1:982478263213:web:ba60f0dcc6eaf1bd60c724',\r\n        measurementId: 'G-CLX18X1XQD',\r\n    };\r\n\r\n    const [callButtonDisabled, setCallButtonDisabled] = useState<boolean>(true);\r\n    const [answerButtonDisabled, setAnswerButtonDisabled] = useState<boolean>(\r\n        true\r\n    );\r\n    const [webcamButtonDisabled, setWebcamButtonDisabled] = useState<boolean>(\r\n        false\r\n    );\r\n    const [hangupButtonDisabled, setHangupButtonDisabled] = useState<boolean>(\r\n        false\r\n    );\r\n\r\n    const [localStream, setLocalStream] = useState<MediaStream>(\r\n        new MediaStream()\r\n    );\r\n\r\n    const [localVideoStream, setLocalVideoStream] = useState<MediaStream>(\r\n        new MediaStream()\r\n    );\r\n\r\n    const [remoteStream, setRemoteStream] = useState<MediaStream>(\r\n        new MediaStream()\r\n    );\r\n\r\n    const servers = {\r\n        iceServers: [\r\n            {\r\n                urls: [\r\n                    'stun:stun1.l.google.com:19302',\r\n                    'stun:stun2.l.google.com:19302',\r\n                ],\r\n            },\r\n        ],\r\n        iceCandidatePoolSize: 10,\r\n    };\r\n\r\n    let peerConnection;\r\n    const [callId, setCallId] = useState<string>('');\r\n\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    // Global State\r\n\r\n    async function createRoom() {\r\n        setCallButtonDisabled(true);\r\n        setAnswerButtonDisabled(true);\r\n        const db = firebase.firestore();\r\n        const roomRef = await db.collection('rooms').doc();\r\n\r\n        console.log('Create PeerConnection with configuration: ', servers);\r\n        peerConnection = new RTCPeerConnection(servers);\r\n\r\n        registerPeerConnectionListeners();\r\n\r\n        localStream.getTracks().forEach((track) => {\r\n            peerConnection.addTrack(track, localStream);\r\n        });\r\n\r\n        // Code for collecting ICE candidates below\r\n        const callerCandidatesCollection = roomRef.collection(\r\n            'callerCandidates'\r\n        );\r\n\r\n        peerConnection.addEventListener('icecandidate', (event) => {\r\n            if (!event.candidate) {\r\n                console.log('Got final candidate!');\r\n                return;\r\n            }\r\n            console.log('Got candidate: ', event.candidate);\r\n            callerCandidatesCollection.add(event.candidate.toJSON());\r\n        });\r\n        // Code for collecting ICE candidates above\r\n\r\n        // Code for creating a room below\r\n        const offer = await peerConnection.createOffer();\r\n        await peerConnection.setLocalDescription(offer);\r\n        console.log('Created offer:', offer);\r\n\r\n        const roomWithOffer = {\r\n            offer: {\r\n                type: offer.type,\r\n                sdp: offer.sdp,\r\n            },\r\n        };\r\n        await roomRef.set(roomWithOffer);\r\n        console.log(`New room created with SDP offer. Room ID: ${roomRef.id}`);\r\n        setCallId(roomRef.id);\r\n        // Code for creating a room above\r\n\r\n        peerConnection.addEventListener('track', (event) => {\r\n            console.log('Got remote track:', event.streams[0]);\r\n            event.streams[0].getTracks().forEach((track) => {\r\n                console.log('Add a track to the remoteStream:', track);\r\n                remoteStream.addTrack(track);\r\n            });\r\n        });\r\n\r\n        // Listening for remote session description below\r\n        roomRef.onSnapshot(async (snapshot) => {\r\n            const data = snapshot.data();\r\n            if (\r\n                !peerConnection.currentRemoteDescription &&\r\n                data &&\r\n                data.answer\r\n            ) {\r\n                console.log('Got remote description: ', data.answer);\r\n                const rtcSessionDescription = new RTCSessionDescription(\r\n                    data.answer\r\n                );\r\n                await peerConnection.setRemoteDescription(\r\n                    rtcSessionDescription\r\n                );\r\n            }\r\n        });\r\n        // Listening for remote session description above\r\n\r\n        // Listen for remote ICE candidates below\r\n        roomRef.collection('calleeCandidates').onSnapshot((snapshot) => {\r\n            snapshot.docChanges().forEach(async (change) => {\r\n                if (change.type === 'added') {\r\n                    let data = change.doc.data();\r\n                    console.log(\r\n                        `Got new remote ICE candidate: ${JSON.stringify(data)}`\r\n                    );\r\n                    await peerConnection.addIceCandidate(\r\n                        new RTCIceCandidate(data)\r\n                    );\r\n                }\r\n            });\r\n        });\r\n        // Listen for remote ICE candidates above\r\n    }\r\n\r\n    async function joinRoom() {\r\n        setCallButtonDisabled(true);\r\n        setAnswerButtonDisabled(true);\r\n\r\n        console.log('Join room: ', callId);\r\n        // document.querySelector(\r\n        //     '#currentRoom'\r\n        // ).innerText = `Current room is ${roomId} - You are the callee!`;\r\n        await joinRoomById(callId);\r\n        // roomDialog.open();\r\n    }\r\n\r\n    async function joinRoomById(roomId) {\r\n        const db = firebase.firestore();\r\n        const roomRef = db.collection('rooms').doc(`${roomId}`);\r\n        const roomSnapshot = await roomRef.get();\r\n        console.log('Got room:', roomSnapshot.exists);\r\n\r\n        if (roomSnapshot.exists) {\r\n            console.log('Create PeerConnection with configuration: ', servers);\r\n            peerConnection = new RTCPeerConnection(servers);\r\n            registerPeerConnectionListeners();\r\n            localStream.getTracks().forEach((track) => {\r\n                peerConnection.addTrack(track, localStream);\r\n            });\r\n\r\n            // Code for collecting ICE candidates below\r\n            const calleeCandidatesCollection = roomRef.collection(\r\n                'calleeCandidates'\r\n            );\r\n            peerConnection.addEventListener('icecandidate', (event) => {\r\n                if (!event.candidate) {\r\n                    console.log('Got final candidate!');\r\n                    return;\r\n                }\r\n                console.log('Got candidate: ', event.candidate);\r\n                calleeCandidatesCollection.add(event.candidate.toJSON());\r\n            });\r\n            // Code for collecting ICE candidates above\r\n\r\n            peerConnection.addEventListener('track', (event) => {\r\n                console.log('Got remote track:', event.streams[0]);\r\n                event.streams[0].getTracks().forEach((track) => {\r\n                    console.log('Add a track to the remoteStream:', track);\r\n                    remoteStream.addTrack(track);\r\n                });\r\n            });\r\n\r\n            // Code for creating SDP answer below\r\n            const offer = roomSnapshot?.data()?.offer;\r\n            console.log('Got offer:', offer);\r\n            await peerConnection.setRemoteDescription(\r\n                new RTCSessionDescription(offer)\r\n            );\r\n            const answer = await peerConnection.createAnswer();\r\n            console.log('Created answer:', answer);\r\n            await peerConnection.setLocalDescription(answer);\r\n\r\n            const roomWithAnswer = {\r\n                answer: {\r\n                    type: answer.type,\r\n                    sdp: answer.sdp,\r\n                },\r\n            };\r\n            await roomRef.update(roomWithAnswer);\r\n            // Code for creating SDP answer above\r\n\r\n            // Listening for remote ICE candidates below\r\n            roomRef.collection('callerCandidates').onSnapshot((snapshot) => {\r\n                snapshot.docChanges().forEach(async (change) => {\r\n                    if (change.type === 'added') {\r\n                        let data = change.doc.data();\r\n                        console.log(\r\n                            `Got new remote ICE candidate: ${JSON.stringify(\r\n                                data\r\n                            )}`\r\n                        );\r\n                        await peerConnection.addIceCandidate(\r\n                            new RTCIceCandidate(data)\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n            // Listening for remote ICE candidates above\r\n        }\r\n    }\r\n\r\n    async function openUserMedia(e) {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n            video: true,\r\n            audio: true,\r\n        });\r\n        setLocalStream(stream);\r\n        setLocalVideoStream(new MediaStream(stream.getVideoTracks()));\r\n        setRemoteStream(new MediaStream());\r\n\r\n        console.log('Stream:', localStream);\r\n        setWebcamButtonDisabled(true);\r\n        setAnswerButtonDisabled(false);\r\n        setCallButtonDisabled(false);\r\n        setHangupButtonDisabled(false);\r\n    }\r\n\r\n    async function hangUp(e) {\r\n        const tracks = localStream.getTracks();\r\n        tracks.forEach((track) => {\r\n            track.stop();\r\n        });\r\n\r\n        if (remoteStream) {\r\n            remoteStream.getTracks().forEach((track) => track.stop());\r\n        }\r\n\r\n        if (peerConnection) {\r\n            peerConnection.close();\r\n        }\r\n\r\n        setCallButtonDisabled(true);\r\n        setAnswerButtonDisabled(true);\r\n\r\n        // document.querySelector('#localVideo').srcObject = null;\r\n        // document.querySelector('#remoteVideo').srcObject = null;\r\n        // document.querySelector('#cameraBtn').disabled = false;\r\n        // document.querySelector('#joinBtn').disabled = true;\r\n        // document.querySelector('#createBtn').disabled = true;\r\n        // document.querySelector('#hangupBtn').disabled = true;\r\n        // document.querySelector('#currentRoom').innerText = '';\r\n\r\n        // Delete room on hangup\r\n        if (callId) {\r\n            const db = firebase.firestore();\r\n            const roomRef = db.collection('rooms').doc(callId);\r\n            const calleeCandidates = await roomRef\r\n                .collection('calleeCandidates')\r\n                .get();\r\n            calleeCandidates.forEach(async (candidate) => {\r\n                await candidate.ref.delete();\r\n            });\r\n            const callerCandidates = await roomRef\r\n                .collection('callerCandidates')\r\n                .get();\r\n            callerCandidates.forEach(async (candidate) => {\r\n                await candidate.ref.delete();\r\n            });\r\n            await roomRef.delete();\r\n        }\r\n\r\n        document.location.reload(true);\r\n    }\r\n\r\n    function registerPeerConnectionListeners() {\r\n        peerConnection.addEventListener('icegatheringstatechange', () => {\r\n            console.log(\r\n                `ICE gathering state changed: ${peerConnection.iceGatheringState}`\r\n            );\r\n        });\r\n\r\n        peerConnection.addEventListener('connectionstatechange', () => {\r\n            console.log(\r\n                `Connection state change: ${peerConnection.connectionState}`\r\n            );\r\n        });\r\n\r\n        peerConnection.addEventListener('signalingstatechange', () => {\r\n            console.log(\r\n                `Signaling state change: ${peerConnection.signalingState}`\r\n            );\r\n        });\r\n\r\n        peerConnection.addEventListener('iceconnectionstatechange ', () => {\r\n            console.log(\r\n                `ICE connection state change: ${peerConnection.iceConnectionState}`\r\n            );\r\n        });\r\n    }\r\n\r\n    const updateInput = (event) => {\r\n        setCallId(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={'mainPage'}>\r\n            <h2>1. Start your Webcam</h2>\r\n            <div className=\"videos\">\r\n                <span>\r\n                    <h3>Local Stream</h3>\r\n                    {localVideoStream && (\r\n                        <Video\r\n                            id=\"webcamVideo\"\r\n                            autoPlay\r\n                            playsInline\r\n                            srcObject={localVideoStream}\r\n                        />\r\n                    )}\r\n                </span>\r\n                <span>\r\n                    <h3>Remote Stream</h3>\r\n                    {remoteStream && (\r\n                        <Video\r\n                            id=\"remoteVideo\"\r\n                            autoPlay\r\n                            playsInline\r\n                            srcObject={remoteStream}\r\n                        />\r\n                    )}\r\n                </span>\r\n            </div>\r\n\r\n            <button\r\n                id=\"webcamButton\"\r\n                disabled={webcamButtonDisabled}\r\n                onClick={openUserMedia}\r\n            >\r\n                Start webcam\r\n            </button>\r\n            <h2>2. Create a new Call</h2>\r\n            <button\r\n                id=\"callButton\"\r\n                disabled={callButtonDisabled}\r\n                onClick={createRoom}\r\n            >\r\n                Create Call (offer)\r\n            </button>\r\n\r\n            <h2>3. Join a Call</h2>\r\n            <p>Answer the call from a different browser window or device</p>\r\n\r\n            <input id=\"callInput\" value={callId} onChange={updateInput} />\r\n            <button\r\n                id=\"answerButton\"\r\n                disabled={answerButtonDisabled}\r\n                onClick={joinRoom}\r\n            >\r\n                Answer\r\n            </button>\r\n\r\n            <h2>4. Hangup</h2>\r\n\r\n            <button\r\n                id=\"hangupButton\"\r\n                disabled={hangupButtonDisabled}\r\n                onClick={hangUp}\r\n            >\r\n                Hangup\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport { PAGE } from '../../Globals';\r\nimport { useOvermind } from '../../overmind';\r\nimport { CharacterSheetsPage } from '../CharacterSheetsPage/CharacterSheetsPage';\r\nimport { RollDicePage } from '../RollDicePage/RollDicePage';\r\nimport { VideoPage } from '../VideoPage/VideoPage';\r\n\r\nimport './MainPageContent.css';\r\n\r\nexport const MainPageContent: FunctionComponent = () => {\r\n    const { state } = useOvermind();\r\n    switch (state.currentPage) {\r\n        case PAGE.ROLL_DICE:\r\n            return <RollDicePage />;\r\n        case PAGE.CHARACTER_SHEETS:\r\n            return <CharacterSheetsPage />;\r\n        case PAGE.VIDEO:\r\n            return <VideoPage />;\r\n    }\r\n    return <div />;\r\n};\r\n","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport { PAGE } from '../../Globals';\r\nimport { useOvermind } from '../../overmind';\r\n\r\nimport './MenuElement.css';\r\n\r\ninterface IMenuElementProps {\r\n  title: string;\r\n  associatedComponent: PAGE;\r\n}\r\n\r\nexport const MenuElement: FunctionComponent<IMenuElementProps> = (props) => {\r\n  const { actions } = useOvermind();\r\n  const { setPage } = actions;\r\n  return (\r\n    <div\r\n      className={'menuElement'}\r\n      onClick={() => setPage(props.associatedComponent)}\r\n    >\r\n      {props.title}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport { MenuElement } from '../../atom/MenuElement/MenuElement';\r\nimport { PAGE } from '../../Globals';\r\n\r\nimport './SideMenu.css';\r\n\r\nexport const SideMenu: FunctionComponent = () => {\r\n    return (\r\n        <div className={'sideMenu'}>\r\n            <MenuElement\r\n                title={'Roll Dice'}\r\n                associatedComponent={PAGE.ROLL_DICE}\r\n            />\r\n            <MenuElement\r\n                title={'Character Sheets'}\r\n                associatedComponent={PAGE.CHARACTER_SHEETS}\r\n            />\r\n            <MenuElement title=\"Video chat\" associatedComponent={PAGE.VIDEO} />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { MainPageContent } from './molecule/MainPageContent/MainPageContent';\nimport { SideMenu } from './molecule/SideMenu/SideMenu';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideMenu />\n      <MainPageContent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createOvermind } from 'overmind';\nimport { Provider } from 'overmind-react';\n// import reportWebVitals from './reportWebVitals';\n\nimport { config } from './overmind';\nconst overmind = createOvermind(config);\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}